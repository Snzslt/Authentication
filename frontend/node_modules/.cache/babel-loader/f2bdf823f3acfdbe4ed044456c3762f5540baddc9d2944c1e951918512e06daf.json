{"ast":null,"code":"var _jsxFileName = \"/Users/sunaz/Desktop/Auth/frontend/src/pages/Authentication.js\";\nimport { json, redirect } from 'react-router-dom';\nimport AuthForm from '../components/AuthForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function getTokenDuration() {\n  const storedExpirationDate = localStorage.getItem('expiration');\n  const expirationDate = new Date(storedExpirationDate);\n  const now = new Date();\n  const duration = expirationDate.getTime() - now.getTime();\n  return duration;\n}\nexport function getAuthToken() {\n  const token = localStorage.getItem('token');\n  const tokenDuration = getTokenDuration();\n  if (tokenDuration < 0) {\n    return 'EXPIRED';\n  }\n}\nfunction AuthenticationPage() {\n  return /*#__PURE__*/_jsxDEV(AuthForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 10\n  }, this);\n}\n_c = AuthenticationPage;\nexport default AuthenticationPage;\nexport async function action({\n  request\n}) {\n  const searchParams = new URL(request.url).searchParams;\n  const mode = searchParams.get('mode') || 'login';\n  if (mode !== 'login' && mode !== 'signup') {\n    throw json({\n      message: 'Unsupportrd mode.'\n    }, {\n      status: 422\n    });\n  }\n  const data = await request.formData();\n  const authData = {\n    email: data.get('email'),\n    password: data.get('password')\n  };\n  const response = await fetch('http://localhost:8080/' + mode, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(authData)\n  });\n  if (response.status === 422 || response.status === 401) {\n    return response;\n  }\n  if (!response.ok) {\n    throw json({\n      message: 'Could not authenticate user.'\n    }, {\n      status: 500\n    });\n  }\n  const resData = await response.json();\n  const token = resData.token;\n  localStorage.setItem('token', token);\n  const expiration = new Date();\n  expiration.setHours(expiration.getHours() + 1);\n  localStorage.setItem('expiration', expiration.toISOString());\n  return redirect('/');\n}\nvar _c;\n$RefreshReg$(_c, \"AuthenticationPage\");","map":{"version":3,"names":["json","redirect","AuthForm","jsxDEV","_jsxDEV","getTokenDuration","storedExpirationDate","localStorage","getItem","expirationDate","Date","now","duration","getTime","getAuthToken","token","tokenDuration","AuthenticationPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","searchParams","URL","url","mode","get","message","status","data","formData","authData","email","password","response","fetch","method","headers","body","JSON","stringify","ok","resData","setItem","expiration","setHours","getHours","toISOString","$RefreshReg$"],"sources":["/Users/sunaz/Desktop/Auth/frontend/src/pages/Authentication.js"],"sourcesContent":["import {json, redirect} from 'react-router-dom';\n\nimport AuthForm from '../components/AuthForm';\n\nexport function getTokenDuration(){\n  const storedExpirationDate = localStorage.getItem('expiration');\n  const expirationDate = new Date(storedExpirationDate);\n  const now = new Date();\n  const duration = expirationDate.getTime() - now.getTime();\n  return duration;\n}\n\nexport function getAuthToken(){\n  const token = localStorage.getItem('token');\n\n  const tokenDuration = getTokenDuration();\n\n  if(tokenDuration < 0){\n    return 'EXPIRED';\n  }\n}\nfunction AuthenticationPage() {\n  return <AuthForm />;\n}\n\nexport default AuthenticationPage;\n\nexport async function action({request}){\n  const searchParams = new URL(request.url).searchParams;\n  const mode = searchParams.get('mode') || 'login';\n\n  if (mode !== 'login' && mode !== 'signup'){\n    throw json({message:'Unsupportrd mode.'},{status: 422} )\n  }\n  const data = await request.formData();\n  const authData = {\n    email: data.get('email'),\n    password: data.get('password'),\n  };\n  const response = await fetch('http://localhost:8080/' + mode, {\n    method: 'POST',\n    headers: {\n      'Content-Type' : 'application/json'\n    },\n    body:JSON.stringify(authData)\n  });\n  if(response.status === 422 || response.status === 401){\n    return response; \n  }\n  if(!response.ok){\n    throw json({message: 'Could not authenticate user.'}, { status: 500});\n  }\n\n  const resData = await response.json();\n  const token = resData.token;\n\n  localStorage.setItem('token', token);\n  const expiration = new Date();\n  expiration.setHours(expiration.getHours() + 1);\n  localStorage.setItem('expiration', expiration.toISOString());\n\n  return redirect('/');\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}