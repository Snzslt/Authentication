{"ast":null,"code":"var _jsxFileName = \"/Users/sunaz/Desktop/Auth/frontend/src/pages/Authentication.js\";\nimport AuthForm from '../components/AuthForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AuthenticationPage() {\n  return /*#__PURE__*/_jsxDEV(AuthForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 10\n  }, this);\n}\n_c = AuthenticationPage;\nexport default AuthenticationPage;\nexport async function action({\n  request\n}) {\n  const searchParams = new URL(request.url).searchParams;\n  searchParams.get('mode') || 'login';\n  if (mod !== 'login' && mode !== 'signup') {\n    throw json({\n      message: 'Unsupportrd mode.'\n    });\n  }\n  const data = await request.formData();\n  const authData = {\n    email: data.get('email'),\n    password: data.get('password')\n  };\n  const response = await fetch('http://localhost:8080/' + mode, {\n    method: 'POST',\n    header: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(authData)\n  });\n  if (response.status === 422 || response.status === 401) {\n    return response;\n  }\n  if (!response.ok) {\n    throw json;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"AuthenticationPage\");","map":{"version":3,"names":["AuthForm","jsxDEV","_jsxDEV","AuthenticationPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","searchParams","URL","url","get","mod","mode","json","message","data","formData","authData","email","password","response","fetch","method","header","body","JSON","stringify","status","ok","$RefreshReg$"],"sources":["/Users/sunaz/Desktop/Auth/frontend/src/pages/Authentication.js"],"sourcesContent":["import AuthForm from '../components/AuthForm';\n\nfunction AuthenticationPage() {\n  return <AuthForm />;\n}\n\nexport default AuthenticationPage;\n\nexport async function action({request}){\n  const searchParams = new URL(request.url).searchParams;\n  searchParams.get('mode') || 'login';\n\n  if (mod !== 'login' && mode !== 'signup'){\n    throw json({message:'Unsupportrd mode.'}, )\n  }\n  const data = await request.formData();\n  const authData = {\n    email: data.get('email'),\n    password: data.get('password'),\n  };\n  const response = await fetch('http://localhost:8080/' + mode, {\n    method: 'POST',\n    header: {\n      'Content-Type' : 'application/json'\n    },\n    body:JSON.stringify(authData)\n  });\n  if(response.status === 422 || response.status === 401){\n    return response; \n  }\n  if(!response.ok){\n    throw json\n  }\n}"],"mappings":";AAAA,OAAOA,QAAQ,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,SAASC,kBAAkBA,CAAA,EAAG;EAC5B,oBAAOD,OAAA,CAACF,QAAQ;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACrB;AAACC,EAAA,GAFQL,kBAAkB;AAI3B,eAAeA,kBAAkB;AAEjC,OAAO,eAAeM,MAAMA,CAAC;EAACC;AAAO,CAAC,EAAC;EACrC,MAAMC,YAAY,GAAG,IAAIC,GAAG,CAACF,OAAO,CAACG,GAAG,CAAC,CAACF,YAAY;EACtDA,YAAY,CAACG,GAAG,CAAC,MAAM,CAAC,IAAI,OAAO;EAEnC,IAAIC,GAAG,KAAK,OAAO,IAAIC,IAAI,KAAK,QAAQ,EAAC;IACvC,MAAMC,IAAI,CAAC;MAACC,OAAO,EAAC;IAAmB,CAAG,CAAC;EAC7C;EACA,MAAMC,IAAI,GAAG,MAAMT,OAAO,CAACU,QAAQ,CAAC,CAAC;EACrC,MAAMC,QAAQ,GAAG;IACfC,KAAK,EAAEH,IAAI,CAACL,GAAG,CAAC,OAAO,CAAC;IACxBS,QAAQ,EAAEJ,IAAI,CAACL,GAAG,CAAC,UAAU;EAC/B,CAAC;EACD,MAAMU,QAAQ,GAAG,MAAMC,KAAK,CAAC,wBAAwB,GAAGT,IAAI,EAAE;IAC5DU,MAAM,EAAE,MAAM;IACdC,MAAM,EAAE;MACN,cAAc,EAAG;IACnB,CAAC;IACDC,IAAI,EAACC,IAAI,CAACC,SAAS,CAACT,QAAQ;EAC9B,CAAC,CAAC;EACF,IAAGG,QAAQ,CAACO,MAAM,KAAK,GAAG,IAAIP,QAAQ,CAACO,MAAM,KAAK,GAAG,EAAC;IACpD,OAAOP,QAAQ;EACjB;EACA,IAAG,CAACA,QAAQ,CAACQ,EAAE,EAAC;IACd,MAAMf,IAAI;EACZ;AACF;AAAC,IAAAT,EAAA;AAAAyB,YAAA,CAAAzB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}